<Activity mc:Ignorable="sap sap2010" x:Class="ImputExcelDataToTemplate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="mergedDt" Type="InArgument(sd:DataTable)" />
    <x:Property Name="filePath" Type="InArgument(x:String)" />
    <x:Property Name="extractedExcelFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>700,2453</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ImputExcelDataToTemplate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="InputExcelDataToTemplate" sap:VirtualizedContainerService.HintSize="680,2393" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="files" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Get All Extracted CSV files" sap:VirtualizedContainerService.HintSize="638,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[files]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(extractedExcelFilePath)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="638,2201" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" WorkbookPath="[filePath + &quot;\EngagementAnalyticsLite.xlsm&quot;]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Writing To Template" sap:VirtualizedContainerService.HintSize="604,2092" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Default="Analytics Report #1 CHEMMAT 121" Name="sheet" />
              <Variable x:TypeArguments="x:String" Default="A2" Name="startingCell" />
              <Variable x:TypeArguments="x:Int32" Default="0" Name="count" />
              <Variable x:TypeArguments="scg:List(x:String)" Name="sheets" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelWriteCell Cell="N14" DisplayName="Update Date in Main Sheet" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Main" Text="[DateTime.Now.ToString(&quot;dd-MMM-yy&quot;)]" />
            <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[sheets]" />
            <Assign DisplayName="Count Number of Existing Reports" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[sheets.Where(function (s) s.Contains("Analytics Report")).Count()]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each Extracted Excel File" sap:VirtualizedContainerService.HintSize="562,1711" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[files]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Copy and Input Data" sap:VirtualizedContainerService.HintSize="526,1578" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="fileName" />
                      <Variable x:TypeArguments="sd:DataTable" Name="tempDt" />
                      <Variable x:TypeArguments="sd:DataTable" Name="copyDt" />
                      <Variable x:TypeArguments="x:Int32" Default="12" Name="columnCount" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Get course name from file" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(file.ToString)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="484,260" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" WorkbookPath="[file.ToString]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="text" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadRange AddHeaders="True" DataTable="[tempDt]" DisplayName="Get Student Data" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[fileName]">
                              <ui:ExcelReadRange.Range>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:ExcelReadRange.Range>
                            </ui:ExcelReadRange>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                    </ui:ExcelApplicationScope>
                    <Assign DisplayName="Assign format of sheet name" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[sheet]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["Analytics Report #" + (count + 1).ToString + " " + fileName]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelCopySheet DestinationFilePath="{x:Null}" DestinationSheetName="[sheet]" DisplayName="Copy Base Sheet" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_1" SheetName="[sheets(3)]" />
                    <ui:ExcelReadRange AddHeaders="False" DataTable="[copyDt]" DisplayName="Get Copied Sheet Data" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="[sheet]">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <ui:ExcelDeleteRange DisplayName="Delete Current Student Info" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_1" Range="[startingCell + &quot;: L&quot; + (copyDt.Rows.Count + 1).ToString]" SheetName="[sheet]" ShiftCells="False" ShiftOption="ShiftUp" />
                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[tempDt]" DisplayName="Write the student data into sheet" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="[sheet]" StartingCell="[startingCell]" />
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[tempDt]" DisplayName="Read the sheet data " sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" SheetName="[sheet]">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <While sap:VirtualizedContainerService.HintSize="484,437" sap2010:WorkflowViewState.IdRef="While_1">
                      <While.Condition>
                        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="columnCount &lt;=20" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                      </While.Condition>
                      <Sequence DisplayName="Autofill formula for required columns" sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" FillRange="[Convert.ToChar(64 + columnCount) + &quot;2:&quot; + Convert.ToChar(64 + columnCount) + (tempDt.Rows.Count + 1).ToString]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_1" SheetName="[sheet]" SourceRange="[Convert.ToChar(64 + columnCount) + &quot;2&quot;]" />
                        <Assign DisplayName="Increment column count" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[columnCount]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[columnCount + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </While>
                    <Assign DisplayName="Increment report count" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[count + 1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>